import org.apache.commons.lang3.StringUtils

buildscript {
   dependencies {
      classpath 'org.apache.commons:commons-lang3:3.3.2'
   }
}

plugins {
   id 'me.champeau.gradle.jmh' version '0.3.1'
}

apply plugin: 'me.champeau.gradle.jmh'
apply plugin: 'java'

repositories {
   mavenCentral()
}

dependencies {
   compile 'io.vertx:vertx-codegen:3.3.2'
   compile 'io.vertx:vertx-docgen:3.3.2'
   testCompile 'io.vertx:vertx-core:3.3.2:tests'
   compile 'io.vertx:vertx-auth-jwt:3.3.2'
   compile 'io.vertx:vertx-auth-oauth2:3.3.2'
   compile 'io.vertx:vertx-auth-common:3.3.2'
   testCompile 'io.vertx:vertx-unit:3.3.2'
   compile 'io.vertx:vertx-auth-shiro:3.3.2'
   compile 'io.vertx:vertx-hazelcast:3.3.2'
   compile 'com.hazelcast:hazelcast:3.4'
   compile 'org.slf4j:slf4j-api:1.7.12'
   testCompile 'junit:junit:4.12'
   jmh 'org.apache.tomcat:tomcat-jdbc:8.0.20'
}

// return the replacement if it passes some conditions
def lookup = { key -> 
   def val = System.getProperty(key)
   if (StringUtils.isNotBlank(val)) {
      logger.debug("Using $key to return found system property value $val")
      return val
   }
   else { 
      if (project.hasProperty(key)) {
         logger.debug("Using $key to return found gradle property value ${project.property(key)}")
         return project.property(key)
      }
   }
   return null
}

def propertyExists = { key ->
   if ( null != lookup(key)) {
      return true
   } else {
      return false
   }
}

def appendIfExists = { key, builder -> 
   if (propertyExists(key)) {
      builder.append( " -D$key=" )
      builder.append( lookup(key) )
   } else {
      logger.debug("Didn't find a property for the $key.")
   }
}

jmh {
   jmhVersion = '1.19'
   fork=1
   threads=1
   warmup = '1s'
   benchmarkMode = ['thrpt']
   profilers = ['gc']
   if (propertyExists('threads')) { threads=Integer.parseInt(lookup('threads')).intValue(); }
   //jvmArgsAppend = " -XX:+UnlockCommercialFeatures -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints -XX:+FlightRecorder -XX:StartFlightRecording=compress=false,delay=2s,duration=24h,filename=/tmp/flight_record_vertx-normalizePath-replacement.jfr,settings=default-with-allocations "
   jvmArgsAppend = " "
   StringBuilder builder = new StringBuilder();
   jvmArgsAppend += builder.toString()
}

task wrapper(type: Wrapper) {
   gradleVersion = '2.14.1'
}
